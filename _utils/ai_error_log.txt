2025-10-27 15:03:54: final log start2025-10-27 15:03:54: unlog done2025-10-27 15:03:54: process done , start unlog them2025-10-27 15:03:54: 3: after process content12025-10-27 15:03:54: 3: finish process content12025-10-27 15:03:53: 3: start process content12025-10-27 15:03:53: 3: finish process content12025-10-27 15:03:53: 0: in item process done {_(框) 说明}; {_(框) 说明}2025-10-27 15:03:53: after fn() : fn and argArr : 文本填充 --- 函数填充2025-10-27 15:03:53: 文本填充: end{_(框) 说明}2025-10-27 15:03:53: 文本填充 end get fn ： {_(框) 说明}Matched content: 可口可乐吧小程序承接了可口可乐公司全部子品牌的营销活动及会员资产，面临着如何赋能渠道变现，提升消费者饮用频次的命题。这个夏天，可口可乐吧项目组与品牌客户紧密合作，从0-1进行创新突破，创造性地打造了可乐与美宜佳、罗森等零售渠道的联合会员模式，与美团O2O平台的双会员模式，攻克了界面交互、技术开发、数据打通等多个难题，成功将海量的品牌会员资产与渠道进行联结，成为行业内首个实现“双会员”模式的现象级案例，体现了汇萨人求新求变的基因，特此提名！ fn:框 arg:函数填充2025-10-27 15:03:53: 文本填充 get function ： 框2025-10-27 15:03:53: 文本填充 get function ： 框2025-10-27 15:03:53: 文本填充 end get content ： content： 可口可乐吧小程序承接了可口可乐公司全部子品牌的营销活动及会员资产，面临着如何赋能渠道变现，提升消费者饮用频次的命题。这个夏天，可口可乐吧项目组与品牌客户紧密合作，从0-1进行创新突破，创造性地打造了可乐与美宜佳、罗森等零售渠道的联合会员模式，与美团O2O平台的双会员模式，攻克了界面交互、技术开发、数据打通等多个难题，成功将海量的品牌会员资产与渠道进行联结，成为行业内首个实现“双会员”模式的现象级案例，体现了汇萨人求新求变的基因，特此提名！ // {_(框) 说明}2025-10-27 15:03:53: 文本填充()：模板：false ；特定函数：true // {_(框) 说明}2025-10-27 15:03:53: 文本填充() start : {_(框) 说明}2025-10-27 15:03:53: before fn() : fn and argArr : 文本填充 --- 函数填充2025-10-27 15:03:53: 0: in item process {_(框) 说明}; {_(框) 说明}2025-10-27 15:03:53: 9: in process {_(框) 说明}; 1 items2025-10-27 15:03:53: 0: in item process done {~ avatar}; {~ avatar}2025-10-27 15:03:53: after fn() : fn and argArr : 图片填充 --- 2025-10-27 15:03:53: 图片填充: end{~ avatar}2025-10-27 15:03:53: replaceImageByName : [GroupItem {~ avatar}] -> FALSE : isEmptyCellToContinue(replacementImageFileName):true2025-10-27 15:03:53: isEmptyToContinue:true2025-10-27 15:03:53: isEmptyCellToContinue32025-10-27 15:03:53: isEmptyCellToContinue22025-10-27 15:03:53: isEmptyCellToContinue12025-10-27 15:03:53: isEmptyCellToContinue02025-10-27 15:03:53: replaceImageCover start2025-10-27 15:03:53: 图片填充: {~ avatar} - avatar - FALSE2025-10-27 15:03:53: 图片填充: start{~ avatar}2025-10-27 15:03:53: before fn() : fn and argArr : 图片填充 --- 2025-10-27 15:03:53: 0: in item process {~ avatar}; {~ avatar}2025-10-27 15:03:53: 8: in process {~ avatar}; 1 items2025-10-27 15:03:53: 0: in item process done {_ 名称}; {_ 名称}2025-10-27 15:03:53: after fn() : fn and argArr : 文本填充 --- 2025-10-27 15:03:53: 文本填充: end{_ 名称}2025-10-27 15:03:53: 文本填充 end get fn ： {_ 名称}Matched content: 可口可乐吧 fn:fillText arg:2025-10-27 15:03:53: 文本填充 end get content ： content： 可口可乐吧 // {_ 名称}2025-10-27 15:03:53: 文本填充()：模板：false ；特定函数：false // {_ 名称}2025-10-27 15:03:53: 文本填充() start : {_ 名称}2025-10-27 15:03:53: before fn() : fn and argArr : 文本填充 --- 2025-10-27 15:03:53: 0: in item process {_ 名称}; {_ 名称}2025-10-27 15:03:53: 7: in process {_ 名称}; 1 items2025-10-27 15:03:53: 1: in item process done {_ 副标}; {_ 副标}2025-10-27 15:03:53: after fn() : fn and argArr : 文本填充 --- 2025-10-27 15:03:53: 文本填充: end{_ 副标}2025-10-27 15:03:53: 文本填充 end get fn ： {_ 副标}Matched content: / fn:fillText arg:2025-10-27 15:03:53: 文本填充 end get content ： content： / // {_ 副标}2025-10-27 15:03:53: 文本填充()：模板：false ；特定函数：false // {_ 副标}2025-10-27 15:03:53: 文本填充() start : {_ 副标}2025-10-27 15:03:53: before fn() : fn and argArr : 文本填充 --- 2025-10-27 15:03:53: 1: in item process {_ 副标}; {_ 副标}2025-10-27 15:03:53: 0: in item process done {_ 副标}; {_ 副标}2025-10-27 15:03:53: after fn() : fn and argArr : 文本填充 --- 2025-10-27 15:03:53: 文本填充: end{_ 副标}2025-10-27 15:03:53: 文本填充 end get fn ： {_ 副标}Matched content: / fn:fillText arg:2025-10-27 15:03:53: 文本填充 end get content ： content： / // {_ 副标}2025-10-27 15:03:53: 文本填充()：模板：false ；特定函数：false // {_ 副标}2025-10-27 15:03:53: 文本填充() start : {_ 副标}2025-10-27 15:03:53: before fn() : fn and argArr : 文本填充 --- 2025-10-27 15:03:53: 0: in item process {_ 副标}; {_ 副标}2025-10-27 15:03:53: 6: in process {_ 副标}; 2 items2025-10-27 15:03:53: 2: in item process done {_ 花}; {_ 花}2025-10-27 15:03:53: after fn() : fn and argArr : 文本填充 --- 2025-10-27 15:03:53: 文本填充: end{_ 花}2025-10-27 15:03:53: 文本填充 end get fn ： {_ 花}Matched content: 8月大红花 fn:fillText arg:2025-10-27 15:03:53: 文本填充 end get content ： content： 8月大红花 // {_ 花}2025-10-27 15:03:53: 文本填充()：模板：false ；特定函数：false // {_ 花}2025-10-27 15:03:53: 文本填充() start : {_ 花}2025-10-27 15:03:53: before fn() : fn and argArr : 文本填充 --- 2025-10-27 15:03:53: 2: in item process {_ 花}; {_ 花}2025-10-27 15:03:53: 1: in item process done {_ 花}; {_ 花}2025-10-27 15:03:53: after fn() : fn and argArr : 文本填充 --- 2025-10-27 15:03:53: 文本填充: end{_ 花}2025-10-27 15:03:53: 文本填充 end get fn ： {_ 花}Matched content: 8月大红花 fn:fillText arg:2025-10-27 15:03:53: 文本填充 end get content ： content： 8月大红花 // {_ 花}2025-10-27 15:03:53: 文本填充()：模板：false ；特定函数：false // {_ 花}2025-10-27 15:03:53: 文本填充() start : {_ 花}2025-10-27 15:03:53: before fn() : fn and argArr : 文本填充 --- 2025-10-27 15:03:53: 1: in item process {_ 花}; {_ 花}2025-10-27 15:03:53: 0: in item process done {_ 花}; {_ 花}2025-10-27 15:03:53: after fn() : fn and argArr : 文本填充 --- 2025-10-27 15:03:53: 文本填充: end{_ 花}2025-10-27 15:03:53: 文本填充 end get fn ： {_ 花}Matched content: 8月大红花 fn:fillText arg:2025-10-27 15:03:53: 文本填充 end get content ： content： 8月大红花 // {_ 花}2025-10-27 15:03:53: 文本填充()：模板：false ；特定函数：false // {_ 花}2025-10-27 15:03:53: 文本填充() start : {_ 花}2025-10-27 15:03:53: before fn() : fn and argArr : 文本填充 --- 2025-10-27 15:03:53: 0: in item process {_ 花}; {_ 花}2025-10-27 15:03:53: 5: in process {_ 花}; 3 items2025-10-27 15:03:53: 1: in item process done `{_ 名称}{_ 后缀}`; `{_ 名称}{_ 后缀}`2025-10-27 15:03:53: after fn() : fn and argArr : 文本填充 --- 模板填充2025-10-27 15:03:53: 文本填充: end`{_ 名称}{_ 后缀}`2025-10-27 15:03:53: 文本填充 end get fn ： `{_ 名称}{_ 后缀}`Matched content: 可口可乐吧项目组 fn:fillText arg:模板填充2025-10-27 15:03:53: 文本填充 end get content ： content： 可口可乐吧项目组 // `{_ 名称}{_ 后缀}`2025-10-27 15:03:53: 文本填充()：模板：true ；特定函数：false // `{_ 名称}{_ 后缀}`2025-10-27 15:03:53: 文本填充() start : `{_ 名称}{_ 后缀}`2025-10-27 15:03:53: before fn() : fn and argArr : 文本填充 --- 模板填充2025-10-27 15:03:53: 1: in item process `{_ 名称}{_ 后缀}`; `{_ 名称}{_ 后缀}`2025-10-27 15:03:53: 0: in item process done `{_ 名称}{_ 后缀}`; `{_ 名称}{_ 后缀}`2025-10-27 15:03:53: after fn() : fn and argArr : 文本填充 --- 模板填充2025-10-27 15:03:53: 文本填充: end`{_ 名称}{_ 后缀}`2025-10-27 15:03:53: 文本填充 end get fn ： `{_ 名称}{_ 后缀}`Matched content: 可口可乐吧项目组 fn:fillText arg:模板填充2025-10-27 15:03:53: 文本填充 end get content ： content： 可口可乐吧项目组 // `{_ 名称}{_ 后缀}`2025-10-27 15:03:53: 文本填充()：模板：true ；特定函数：false // `{_ 名称}{_ 后缀}`2025-10-27 15:03:53: 文本填充() start : `{_ 名称}{_ 后缀}`2025-10-27 15:03:53: before fn() : fn and argArr : 文本填充 --- 模板填充2025-10-27 15:03:53: 0: in item process `{_ 名称}{_ 后缀}`; `{_ 名称}{_ 后缀}`2025-10-27 15:03:53: 4: in process `{_ 名称}{_ 后缀}`; 2 items2025-10-27 15:03:53: 0: in item process done {+ onlyGroupName}; {+ onlyGroupName}2025-10-27 15:03:53: after fn() : fn and argArr : 切换可见 --- 2025-10-27 15:03:53: 切换可见: end{+ onlyGroupName}2025-10-27 15:03:53: 切换可见: start{+ onlyGroupName}2025-10-27 15:03:53: before fn() : fn and argArr : 切换可见 --- 2025-10-27 15:03:53: 0: in item process {+ onlyGroupName}; {+ onlyGroupName}2025-10-27 15:03:53: 3: in process {+ onlyGroupName}; 1 items2025-10-27 15:03:53: 1: in item process done {_(行) 头像文本}; {_(行) 头像文本}2025-10-27 15:03:53: after fn() : fn and argArr : 文本填充 --- 函数填充2025-10-27 15:03:53: 文本填充: end{_(行) 头像文本}2025-10-27 15:03:53: 文本填充 end get fn ： {_(行) 头像文本}Matched content: 可口可乐吧项目组 fn:行 arg:函数填充2025-10-27 15:03:53: 文本填充 get function ： 行2025-10-27 15:03:53: 文本填充 get function ： 行2025-10-27 15:03:53: 文本填充 end get content ： content： 可口可乐吧项目组 // {_(行) 头像文本}2025-10-27 15:03:53: 文本填充()：模板：false ；特定函数：true // {_(行) 头像文本}2025-10-27 15:03:53: 文本填充() start : {_(行) 头像文本}2025-10-27 15:03:53: before fn() : fn and argArr : 文本填充 --- 函数填充2025-10-27 15:03:53: 1: in item process {_(行) 头像文本}; {_(行) 头像文本}2025-10-27 15:03:53: 0: in item process done {_(行) 头像文本}; {_(行) 头像文本}2025-10-27 15:03:53: after fn() : fn and argArr : 文本填充 --- 函数填充2025-10-27 15:03:53: 文本填充: end{_(行) 头像文本}2025-10-27 15:03:53: 文本填充 end get fn ： {_(行) 头像文本}Matched content: 可口可乐吧项目组 fn:行 arg:函数填充2025-10-27 15:03:53: 文本填充 get function ： 行2025-10-27 15:03:53: 文本填充 get function ： 行2025-10-27 15:03:53: 文本填充 end get content ： content： 可口可乐吧项目组 // {_(行) 头像文本}2025-10-27 15:03:53: 文本填充()：模板：false ；特定函数：true // {_(行) 头像文本}2025-10-27 15:03:53: 文本填充() start : {_(行) 头像文本}2025-10-27 15:03:53: before fn() : fn and argArr : 文本填充 --- 函数填充2025-10-27 15:03:53: 0: in item process {_(行) 头像文本}; {_(行) 头像文本}2025-10-27 15:03:53: 2: in process {_(行) 头像文本}; 2 items2025-10-27 15:03:53: 0: in item process done {+ group}; {+ group}2025-10-27 15:03:53: after fn() : fn and argArr : 切换可见 --- 2025-10-27 15:03:53: 切换可见: end{+ group}2025-10-27 15:03:53: 切换可见: start{+ group}2025-10-27 15:03:53: before fn() : fn and argArr : 切换可见 --- 2025-10-27 15:03:53: 0: in item process {+ group}; {+ group}2025-10-27 15:03:53: 1: in process {+ group}; 1 items2025-10-27 15:03:53: 0: in item process done {+ mate}; {+ mate}2025-10-27 15:03:53: after fn() : fn and argArr : 切换可见 --- 2025-10-27 15:03:53: 切换可见: end{+ mate}2025-10-27 15:03:53: 切换可见: start{+ mate}2025-10-27 15:03:53: before fn() : fn and argArr : 切换可见 --- 2025-10-27 15:03:53: 0: in item process {+ mate}; {+ mate}2025-10-27 15:03:53: 0: in process {+ mate}; 1 items2025-10-27 15:03:53: 3: start process content12025-10-27 15:03:53: 3: finish process content12025-10-27 15:03:53: 3: start process content12025-10-27 15:03:53: 3: before  process content12025-10-27 15:03:53: 2: after process content12025-10-27 15:03:53: 2: finish process content12025-10-27 15:03:52: 2: start process content12025-10-27 15:03:52: 2: finish process content12025-10-27 15:03:52: 0: in item process done {_(框) 说明}; {_(框) 说明}2025-10-27 15:03:52: after fn() : fn and argArr : 文本填充 --- 函数填充2025-10-27 15:03:52: 文本填充: end{_(框) 说明}